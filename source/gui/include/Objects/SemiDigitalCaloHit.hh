  /// \file SemiDigitalCaloHit.hh
/*
 *
 * SemiDigitalCaloHit.hh header template generated by fclass
 * Creation date : mer. juin 12 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#ifndef SEMIDIGITALCALOHIT_HH
#define SEMIDIGITALCALOHIT_HH

#include "Objects/CaloHit.hh"

#include <iostream> 
#include <string> 
#include <cstdlib> 
#include <cmath> 
#include <vector> 

namespace baboon {


	enum CaloHitThreshold {
		fThreshold1,
		fThreshold2,
		fThreshold3
	};
	/*
	 * Class SemiDigitalCaloHit
	 * Inherits from base class CaloHit
	 */

	class SemiDigitalCaloHit : public CaloHit {

		public:

			/*!
			 *
			 * Default Constructor
			 *
			 */
			SemiDigitalCaloHit();

			/*!
			 *
			 * Default Destructor
			 *
			 */
			virtual ~SemiDigitalCaloHit();

			/*!
			 *
			 *
			 *
			 */
			Return SetThreshold( const CaloHitThreshold &thres );


		protected:

			CaloHitThreshold threshold;

		public:

			inline CaloHitThreshold GetThreshold() const
				{ return threshold; }


	};  // class

	typedef std::vector<SemiDigitalCaloHit*> SemiDigitalCaloHitCollection;

}  // namespace 

#endif  //  SEMIDIGITALCALOHIT_HH
