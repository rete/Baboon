  /// \file TrackerHit.hh
/*
 *
 * TrackerHit.hh header template generated by fclass
 * Creation date : mer. juin 12 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#ifndef TRACKERHIT_HH
#define TRACKERHIT_HH

#include <iostream> 
#include <string> 
#include <cstdlib> 
#include <cmath> 
#include <vector> 

#include "Utilities/ReturnValues.hh"
#include "Geometry/ThreeVector.hh"

namespace baboon {

	/*
	 * Class TrackerHit
	 */

	class TrackerHit {

		public:

			/*!
			 *
			 * Default Constructor
			 *
			 */
			TrackerHit();

			/*!
			 *
			 *  Default Destructor
			 *
			 */
			virtual ~TrackerHit();

			/*!
			 *
			 *
			 *
			 */
			Return SetPosition( const ThreeVector &pos );

			/*!
			 *
			 *
			 *
			 */
			Return SetdEdx( const double &dedx );

			/*!
			 *
			 *
			 *
			 */
			Return SetTime( const double &t );

			/*!
			 *
			 *
			 *
			 */
			Return SetEDeposit( const double &e );

			/*!
			 *
			 *
			 *
			 */
			Return SetEDepositError( const double &eError );



		protected:

			ThreeVector position;
			double dEdx;
			double time;
			double eDeposit;
			double eDepositError;

		public:

			/*!
			 *
			 *
			 *
			 */
			ThreeVector GetPosition()
				{ return position; }

			/*!
			 *
			 *
			 *
			 */
			double GetdEdx()
				{ return dEdx; }

			/*!
			 *
			 *
			 *
			 */
			double GetTime()
				{ return time; }

			/*!
			 *
			 *
			 *
			 */
			double GetEDeposit()
				{ return eDeposit; }

			/*!
			 *
			 *
			 *
			 */
			double GetEDepositError()
				{ return eDepositError; }


	};  // class

}  // namespace 

#endif  //  TRACKERHIT_HH
