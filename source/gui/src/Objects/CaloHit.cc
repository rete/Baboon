  /// \file CaloHit.cc
/*
 *
 * CaloHit.cc source template generated by fclass
 * Creation date : mer. juin 12 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#include "Objects/CaloHit.hh"

namespace baboon {

	CaloHit::CaloHit( const CaloHitType &caloType )
		: caloHitType( caloType )
		,time(0.0)
		,caloHitTag(fUndefinedCaloHit)
		,weight(0)
		,module(0)
		,stave(0) {

	}

	CaloHit::~CaloHit() {

	}


	Return CaloHit::SetPosition( const ThreeVector &pos ) {

		position = pos;
		return BABOON_SUCCESS();
	}


	Return CaloHit::SetTime( const double &t ) {

		if( t < 0 )
			return BABOON_INVALID_PARAMETER("Time < 0");
		time  = t;
		return BABOON_SUCCESS();
	}


	Return CaloHit::SetCaloHitTag( const CaloHitTag &tag ) {

		caloHitTag = tag;
		return BABOON_SUCCESS();
	}


	Return CaloHit::SetCaloHitWeight( const double &w ) {

		if( w < 0 )
			return BABOON_INVALID_PARAMETER("Weight < 0");
		weight = w;
		return BABOON_SUCCESS();
	}

	Return CaloHit::SetCaloHitStave( const int &s ) {

		if( s < 0 )
			return BABOON_INVALID_PARAMETER("Stave < 0");
		stave = s;
		return BABOON_SUCCESS();
	}

	Return CaloHit::SetCaloHitModule( const int &m ) {

		if( m < 0 )
			return BABOON_INVALID_PARAMETER("Module < 0");
		module = m;
		return BABOON_SUCCESS();
	}


}  // namespace 

