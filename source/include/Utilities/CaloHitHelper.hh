  /// \file CaloHitHelper.hh
/*
 *
 * CaloHitHelper.hh header template generated by fclass
 * Creation date : ven. juil. 26 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#ifndef CALOHITHELPER_HH
#define CALOHITHELPER_HH

#include <iostream> 
#include <string> 
#include <cstdlib> 
#include <cmath> 
#include <vector>
#include <algorithm>

#include "Objects/CaloHit.hh"
#include "Geometry/ThreeVector.hh"
#include "Utilities/Internal.hh"
#include "Utilities/Globals.hh"
#include "Utilities/ReturnValues.hh"

namespace baboon {

	/*
	 * Class CaloHitHelper
	 */

	class CaloHitHelper {

		public:

			/*!
			 *
			 *
			 *
			 */
			static Return ComputeBarycenter( CaloHitCollection *caloHitCollection , ThreeVector &barycenter );

			/*!
			 *
			 *
			 *
			 */
			static Return ComputeRMS( CaloHitCollection *caloHitCollection , DoubleVector &rms );

			/*!
			 *
			 *
			 *
			 */
			static Return GetLastLayer( CaloHitCollection *caloHitCollection , int &lastLayer );

			/*!
			 *
			 *
			 *
			 */
			static Return GetFirstLayer( CaloHitCollection *caloHitCollection , int &firstLayer );

			/*!
			 *
			 *
			 *
			 */
			static Return CollectionContainsCaloHit( CaloHitCollection *caloHitCollection , CaloHit *caloHit , bool &contains );

	};  // class

}  // namespace 

#endif  //  CALOHITHELPER_HH
