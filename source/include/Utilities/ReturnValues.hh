  /// \file ReturnValues.hh
/*
 *
 * ReturnValues.hh header template generated by fclass
 * Creation date : dim. avr. 28 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#ifndef RETURNVALUES_HH
#define RETURNVALUES_HH

#include <iostream>
#include <string>


namespace baboon {


	enum ReturnStatus {

		fStatusSuccess,
		fStatusWarning,
		fStatusInvalidParameter,
		fStatusOutOfRange,
		fStatusAlreadyInitialized,
		fStatusAlreadyPresent,
		fStatusNotFound,
		fStatusNotInitialized,
		fStatusError
	};

	/*!
	 *
	 * @brief Return class.
	 * Returned object type with a status
	 *
	 */
	class Return {
	public:
			Return() : message("") , fStatus(fStatusSuccess) {;}
			ReturnStatus fStatus;
			std::string message;
			Return& operator =(const Return& ret);
			std::string ToString();
	};

	bool operator == ( Return const &r1 , Return const &r2 );


	/*!
	 *
	 * @brief Return a SUCCESS status and a given message.
	 *
	 */
	Return BABOON_SUCCESS( const std::string &message = "" );

	/*!
	 *
	 * @brief Return an ERROR status and a given message.
	 *
	 */
	Return BABOON_ERROR( const std::string &message = "" );

	/*!
	 *
	 * @brief Return a WARNING status and a given message.
	 *
	 */
	Return BABOON_WARNING( const std::string &message = "" );

	/*!
	 *
	 * @brief Return an INVALID PARAMETER status and a given message.
	 *
	 */
	Return BABOON_INVALID_PARAMETER( const std::string &message = "" );

	/*!
	 *
	 * @brief Return an OUT OF RANGE status and a given message.
	 *
	 */
	Return BABOON_OUT_OF_RANGE( const std::string &message = "" );

	/*!
	 *
	 * @brief Return a ERROR status and a given message.
	 *
	 */
	Return BABOON_ALREADY_INITIALIZED( const std::string &message = "" );

	/*!
	 *
	 * @brief Return a ALREADY PRESENT status and a given message.
	 *
	 */
	Return BABOON_ALREADY_PRESENT( const std::string &message = "" );

	/*!
	 *
	 * @brief Return a NOT FOUND status and a given message.
	 *
	 */
	Return BABOON_NOT_FOUND( const std::string &message = "" );

	/*!
	 *
	 * @brief Return a NOT INITIALIZED status and a given message.
	 *
	 */
	Return BABOON_NOT_INITIALIZED( const std::string &message = "" );



}  // namespace 

#endif  //  RETURNVALUES_HH
