  /// \file EventLoader.hh
/*
 *
 * EventLoader.hh header template generated by fclass
 * Creation date : dim. mai 5 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#ifndef EVENTLOADER_HH
#define EVENTLOADER_HH

#include <iostream> 
#include <string> 
#include <cstdlib> 
#include <cmath> 
#include <vector>
#include <map>

// lcio includes
#include "IO/LCReader.h"
#include "IOIMPL/LCFactory.h"

// baboon includes
#include "Utilities/ReturnValues.hh"
#include "Managers/HitManager.hh"
#include "Objects/Hit.hh"
#include "Utilities/Globals.hh"
#include "MarlinProcessor/CaloHitCreator.hh"

// root includes
#include "TEveManager.h"
#include "TEveBox.h"


namespace baboon {

	/*
	 * Class EventLoader
	 */

	class EventLoader {

		public:

			/*! Default Constructor */
			EventLoader();

			/*! Default Destructor */
			virtual ~EventLoader();

			Return LoadEvent( EVENT::LCEvent * , const std::string & );

			Return ClearCaloHitBoxes();

			void LoadLCIOFile( const std::string & );

		protected:

			IO::LCReader *lcReader;
			EVENT::LCEvent *currentLCEvent;
			std::map< Hit* , TEveBox* > caloHitBoxes;


			Return LoadHitCollection( HitCollection *hitCol );


	};  // class

}  // namespace 

#endif  //  EVENTLOADER_HH
