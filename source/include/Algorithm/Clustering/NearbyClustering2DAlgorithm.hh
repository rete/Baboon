  /// \file NearbyClustering2DAlgorithm.hh
/*
 *
 * NearbyClustering2DAlgorithm.hh header template generated by fclass
 * Creation date : ven. avr. 19 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#ifndef NEARBYCLUSTERING2DALGORITHM_HH
#define NEARBYCLUSTERING2DALGORITHM_HH

#include "Algorithm/AbstractAlgorithm.hh"
#include "Exception.hh"

#include <iostream> 
#include <string> 
#include <cstdlib> 
#include <cmath> 
#include <vector> 

#include "Objects/Hit.hh"
#include "Managers/HitManager.hh"

namespace baboon {

	/*
	 * Class NearbyClustering2DAlgorithm
	 * Inherits from base class ClusteringAlgorithm
	 */

	class NearbyClustering2DAlgorithm : public AbstractAlgorithm {


		public:

			/*! Default Constructor */
			NearbyClustering2DAlgorithm();

			/*! Default Destructor */
			virtual ~NearbyClustering2DAlgorithm();

		protected:

			/*! Initialize the algorithm, i.e by initializing specific variables */
			virtual void Init();

			/*! Execute the algorithm */
			virtual void Execute();

			/*! Finalize the algorithm*/
			virtual void End();

			/*! Allow to check if everything is well set in the algorithm before starting it */
			virtual Return CheckConsistency();

			HitCollection *hitCollection;


	};  // class

}  // namespace 

#endif  //  NEARBYCLUSTERING2DALGORITHM_HH
