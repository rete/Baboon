  /// \file IsolationTaggingAlgorithm.hh
/*
 *
 * IsolationTaggingAlgorithm.hh header template generated by fclass
 * Creation date : lun. avr. 22 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#ifndef ISOLATIONTAGGINGALGORITHM_HH
#define ISOLATIONTAGGINGALGORITHM_HH

#include "Algorithm/AbstractAlgorithm.hh"
#include "Exception.hh"

#include <iostream> 
#include <string> 
#include <cstdlib> 
#include <cmath> 
#include <vector> 

#include "Objects/Cluster.hh"
#include "Objects/Hit.hh"
#include "Managers/HitManager.hh"

#include <omp.h>

namespace baboon {

	/*
	 * Class IsolationTaggingAlgorithm
	 * Inherits from base class AbstractAlgorithm
	 */

	class IsolationTaggingAlgorithm : public AbstractAlgorithm {

		public:

			/*! Default Constructor */
			IsolationTaggingAlgorithm();

			/*! Default Destructor */
			virtual ~IsolationTaggingAlgorithm();

			/*! Set the hit collection for the algorithm */
			void SetHitCollection( HitCollection *hitCol )
				{ hitCollection = hitCol; }

			inline std::vector<double> GetIsolationWeights()
				{ return isolationWeights; }


		protected:

			/*! Hit collection for the algorithm */
			HitCollection *hitCollection;

			/*! Distance at which we don't want other hits */
			int distance;

			/*! Concentration of hits allowed in a volume of (2*distance+1)^3 */
			double concentrationLimit;

			/*! Hit weight for each hit in the context of isolation ( cf. Execute() ) */
			std::vector<double> isolationWeights;

			/*! Initialize the algorithm, i.e by initializing specific variables */
			virtual void Init();

			/*! Execute the algorithm */
			virtual void Execute();

			/*! Finalize the algorithm*/
			virtual void End();

			/*! Allow to check if everything is well set in the algorithm before starting it */
			virtual Return CheckConsistency();


	};  // class

}  // namespace 

#endif  //  ISOLATIONTAGGINGALGORITHM_HH
