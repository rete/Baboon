  /// \file OverlayEstimatorProcessor.hh
/*
 *
 * OverlayEstimatorProcessor.hh header template generated by fclass
 * Creation date : jeu. mai 9 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#ifndef OVERLAYESTIMATORPROCESSOR_HH
#define OVERLAYESTIMATORPROCESSOR_HH

#include "marlin/Processor.h"
#include "EVENT/CalorimeterHit.h"
#include "lcio.h"

#include <iostream> 
#include <string> 
#include <cstdlib> 
#include <cmath> 
#include <vector> 

namespace baboon {

/* 
 * Class OverlayEstimatorProcessor
 * Inherits from base class marlin::Processor
 */ 

class OverlayEstimatorProcessor : public marlin::Processor {

	public:

		/*! Default Constructor */
		OverlayEstimatorProcessor();

		/*! Default Destructor */
		virtual ~OverlayEstimatorProcessor();


		virtual Processor *newProcessor()
			{ return new OverlayEstimatorProcessor(); }

		/** Called at the begin of the job before anything is read.
		* Use to initialize the processor, e.g. book histograms.
		*/
		virtual void init() ;

		/** Called for every run.
		*/
		virtual void processRunHeader( LCRunHeader* run ) ;

		/** Called for every event - the working horse.
		*/
		virtual void processEvent( LCEvent * evt ) ;


		virtual void check( LCEvent * evt ) ;


		/** Called after data processing for clean up.
		*/
		virtual void end() ;

	protected:


};  // class 

}  // namespace 

#endif  //  OVERLAYESTIMATORPROCESSOR_HH
