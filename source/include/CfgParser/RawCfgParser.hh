  /// \file RawCfgParser.hh
/*
 *
 * RawCfgParser.hh header template generated by fclass
 * Creation date : jeu. juin 6 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#ifndef RAWCFGPARSER_HH
#define RAWCFGPARSER_HH

#include <iostream> 
#include <string> 
#include <cstdlib> 
#include <cmath> 
#include <vector> 


#include "CfgParser/Section.hh"





namespace cfgparser {


	/*!
	 *
	 * brief Class RawCfgParser
	 *
	 */

	class RawCfgParser {

		public:

			/*!
			 *
			 * brief Default Constructor
			 *
			 */
			RawCfgParser();

			/*!
			 *
			 * brief Default Destructor
			 *
			 */
			virtual ~RawCfgParser();

			StatusCode CreateSection( const std::string &secName );

			StatusCode AddSection( const Section *section );

			StatusCode GetValue( const std::string& section , const std::string &key, std::string *value ) const;

			StatusCode GetValue( const std::string& section , const std::string &key, int *value ) const;

			StatusCode GetValue( const std::string& section , const std::string &key, double *value ) const;

			StatusCode GetValue( const std::string& section , const std::string &key, bool *value ) const;

			StatusCode GetValue( const std::string& section , const std::string &key, std::vector< std::string > *value ) const;

			StatusCode GetValue( const std::string& section , const std::string &key, std::vector< int > *value ) const;

			StatusCode GetValue( const std::string& section , const std::string &key, std::vector< double > *value ) const;

			StatusCode GetValue( const std::string& section , const std::string &key, std::vector< bool > *value ) const;

			bool HasKey( const std::string &sectionName , const std::string &key ) const;

			bool HasSection( const std::string &secName ) const;

			bool HasSection( const Section *section ) const;

			StatusCode GetSection( const std::string &sectionName , Section &sec );

			StatusCode GetSection( const std::string &sectionName , Section *sec );

			StatucCode GetKeys( const std::string &sectionName , std::vector< std::string > &keys );

			StatusCode Read( const std::string &fileName );

			StatusCode Read( const std::vector< std::string > &fileNames );

			StatusCode Read( const std::ifstream& stream );

			StatusCode Read( const std::ifstream* stream );

			StatusCode RemoveKey( const std::string &sectionName , const std::string &key );

			StatusCode RemoveSection( const std::string &sectionName );

			StatusCode GetSections( SectionCollection &sections );

			StatusCode SetValue( const std::string& section , const std::string &key, std::string *value );

			StatusCode SetValue( const std::string& section , const std::string &key, int *value );

			StatusCode SetValue( const std::string& section , const std::string &key, double *value );

			StatusCode SetValue( const std::string& section , const std::string &key, bool *value );

			StatusCode SetValue( const std::string& section , const std::string &key, std::vector< std::string > *value );

			StatusCode SetValue( const std::string& section , const std::string &key, std::vector< int > *value );

			StatusCode SetValue( const std::string& section , const std::string &key, std::vector< double > *value );

			StatusCode SetValue( const std::string& section , const std::string &key, std::vector< bool > *value );

			StatusCode Write( const std::string &fileName );

			StatusCode Write( const std::ifstream& stream );

			StatusCode Write( const std::ifstream* stream );

		protected:

			SectionCollection sections;


	};  // class

}  // namespace 

#endif  //  RAWCFGPARSER_HH
