  /// \file CoreCollectionBuilder.hh
/*
 *
 * CoreCollectionBuilder.hh header template generated by fclass
 * Creation date : mar. mai 7 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#ifndef CORECOLLECTIONBUILDER_HH
#define CORECOLLECTIONBUILDER_HH

#include "Reconstruction/Builders/ObjectBuilder.hh"

#include <iostream> 
#include <string> 
#include <cstdlib> 
#include <cmath> 
#include <vector> 

#include "Reconstruction/Objects/Core.hh"
#include "Utilities/ReturnValues.hh"
#include "Utilities/Globals.hh"
#include "Algorithm/Clustering/ClusteringAlgorithm.hh"

namespace baboon {

	/*!
	 *
	 * @brief Class CoreCollectionBuilder
	 * Inherits from base class ObjectBuilder
	 *
	 */

	class CoreCollectionBuilder : public ObjectBuilder<CoreCollection> {

		public:

			/*!
			 *
			 * @brief Return an unique instance of the CoreCollectionBuilder;
			 *
			 */
			static CoreCollectionBuilder *GetInstance();

			/*!
			 *
			 * @brief Kill the unique instance of the CoreCollectionBuilder;
			 *
			 */
			static void Kill();


		protected:

			static CoreCollectionBuilder *instance;

			/*!
			 *
			 * @brief Default Constructor
			 *
			 */
			CoreCollectionBuilder();

			/*!
			 *
			 * @brief Default Destructor
			 *
			 */
			virtual ~CoreCollectionBuilder();


			/*!
			 *
			 *
			 *
			 */
			virtual void BuildObject();

			/*!
			 *
			 *
			 *
			 */
			virtual Return ClearObject();


	};  // class

}  // namespace 

#endif  //  CORECOLLECTIONBUILDER_HH
