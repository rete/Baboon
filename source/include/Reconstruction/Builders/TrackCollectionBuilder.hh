  /// \file TrackCollectionBuilder.hh
/*
 *
 * TrackCollectionBuilder.hh header template generated by fclass
 * Creation date : mar. avr. 30 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#ifndef TRACKCOLLECTIONBUILDER_HH
#define TRACKCOLLECTIONBUILDER_HH

#include "ObjectBuilder.hh"

#include <iostream> 
#include <string> 
#include <cstdlib> 
#include <cmath> 
#include <vector> 


#include "Reconstruction/Objects/Track.hh"
#include "Objects/Cluster.hh"
#include "Managers/ClusteringManager.hh"


namespace baboon {

	/*
	 * Class TrackCollectionBuilder
	 * Inherits from base class ObjectBuilder< T >
	 */

	class TrackCollectionBuilder : public ObjectBuilder<TrackCollection> {

		public:


			/*!
			 *
			 * @brief : Set the maximum distance between hits ( for layers) while reconstructing tracks
			 *
			 */
			inline void SetMaximumDistanceBetweenHitsForLayers( int max )
				{ maximumDistanceBetweenHitsForLayers = max; }

			/*!
			 *
			 * @brief : Set the maximum distance between hits ( in planes ) while reconstructing tracks
			 *
			 */
			inline void SetMaximumDistanceBetweenHitsInPlane( int max )
				{ maximumDistanceBetweenHitsInPlane = max; }

			/*!
			 *
			 * @brief : Set the track minimum size cut while reconstructing tracks.
			 *
			 */
			inline void SetTrackMinimumSize( int min )
				{ trackSegmentMinimumSize = min; }


			static TrackCollectionBuilder *GetInstance();

			static void Kill();


		protected:


			/*!
			 * @brief : Default Constructor
			 */
			TrackCollectionBuilder();

			/*!
			 * @brief : Default Destructor
			 */
			virtual ~TrackCollectionBuilder();

			/*!
			 *
			 * @brief : Method to build the object.
			 *
			 */
			virtual void BuildObject();

			/*!
			 *
			 * @brief : Method to clear the object.
			 *
			 */
			virtual Return ClearObject();

			static TrackCollectionBuilder *instance;
			int maximumDistanceBetweenHitsForLayers;
			int maximumDistanceBetweenHitsInPlane;
			int trackSegmentMinimumSize;

	};  // class

}  // namespace 

#endif  //  TRACKCOLLECTIONBUILDER_HH
