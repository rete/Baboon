  /// \file EnergyCalculator.hh
/*
 *
 * EnergyCalculator.hh header template generated by fclass
 * Creation date : ven. mai 24 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#ifndef ENERGYCALCULATOR_HH
#define ENERGYCALCULATOR_HH

#include <iostream> 
#include <string> 
#include <cstdlib> 
#include <cmath> 
#include <vector> 

#include "Objects/HitCollection.hh"


namespace baboon {

	/*
	 * Class EnergyCalculator
	 */

	class EnergyCalculator {

		public:

			/*!
			 *
			 * @brief Default Constructor
			 *
			 */
			EnergyCalculator();

			/*!
			 *
			 * @brief Default Destructor
			 *
			 */
			virtual ~EnergyCalculator();

			/*!
			 *
			 * @brief Calculate the energy and store it.
			 *
			 */
			virtual Return CalculateEnergy() = 0;

			/*!
			 *
			 * @brief Set the parameter params[i] = value
			 *
			 */
			virtual Return SetParameter( const int &i , const double &value ) = 0;

		protected:

			HitCollection *hitCollection;
			double *params;
			double energy;

		public:

			/*!
			 *
			 * @brief Set the hit collection for the energy computation;
			 *
			 */
			inline void SetHitCollection( HitCollection *hitCol )
				{ hitCollection = hitCol; }

			/*!
			 *
			 * @brief Return the computed energy
			 *
			 */
			inline double GetEnergy()
				{ return energy; }


	};  // class

}  // namespace 

#endif  //  ENERGYCALCULATOR_HH
