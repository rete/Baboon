/*
 *
 * Linear3DFit.hh header template generated by fclass
 * Creation date : Mon Mar 25 20:07:39 2013
 * Copyright (c) CNRS / IPNL
 * All Right Reserved.
 *
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 *
 * Written by : R. Et√©
 */


#ifndef LINEAR3DFIT_HH
#define LINEAR3DFIT_HH

#include <iostream>
#include <string>
#include <cstdlib>
#include <cmath>
#include <vector>


// sdhcal includes
#include "Geometry/ThreeVector.hh"



namespace baboon {

	/*!
	 * Class Linear3DFit.
	 * Fit a 3D line in 3D space. The line equation is the following one :
	 *       x = a*z + b
	 *       y = c*z + d
	 *       z = t
	 *       Resolution is known analytically.
	 */

	class Linear3DFit {

		protected :

			std::vector<ThreeVector> positions;

			std::vector<ThreeVector> weights;

			double chi2;

			double params[4];

			void ComputeChi2();


		public :
			/*! Default Constructor */
			Linear3DFit( std::vector<ThreeVector> pos , std::vector<ThreeVector> w);
			/*! Default Destructor */
			virtual ~Linear3DFit();

			void Fit();

			inline double GetChi2()
				{ ComputeChi2(); return chi2; }

			ThreeVector VectorFromRealLine( const ThreeVector& );

			ThreeVector GetNormaleProjection( const ThreeVector& );

			double* GetFitParameters()
				{ return params; }

	};

}



#endif  // LINEAR3DFIT_HH
