  /// \file SDHCALPrototype.hh
/*
 *
 * SDHCALPrototype.hh header template generated by fclass
 * Creation date : dim. mai 19 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#ifndef SDHCALPROTOTYPE_HH
#define SDHCALPROTOTYPE_HH

#include <iostream> 
#include <string>
#include <sstream>
#include <cstdlib> 
#include <cmath> 
#include <vector> 


#include "Utilities/ReturnValues.hh"
#include "Utilities/Globals.hh"
#include "Config/SdhcalConfig.hh"
#include "Objects/Hit.hh"
#include "Geometry/Matrix3D.hh"

#include "TGeoManager.h"
#include "TGeoNode.h"
#include "TGeoVolume.h"
#include "TGeoMaterial.h"
#include "TGeoMedium.h"
#include "TGeoMatrix.h"

namespace baboon {

	/*!
	 * Class SDHCALPrototype
	 */

	class SDHCALPrototype {

		public:

		    /*! Return a single instance of this class. Singleton pattern */
		    static SDHCALPrototype *GetInstance();
		    /*! Kill the instance carefully. Singleton pattern */
		    static void Kill();

			Return BuildGeometry();

			void LoadHitCollection( HitCollection *hitCol );

			void ClearCalorimeter();

			void BuildCalorimeter();


		protected:

		    /*! Unique instance of this class. Singleton pattern */
		    static SDHCALPrototype* instance;
		    /*! Protected constructor. Singleton pattern */
		    SDHCALPrototype();
		    /*! Protected constructor. Singleton pattern */
		    virtual ~SDHCALPrototype();

			std::string IjkToString( unsigned int I , unsigned int J , unsigned int K );

			IntVector StringToIJK( const std::string &ijkString );

			bool geometryAlreadyBuilt;
			TGeoManager *geoManager;
			SdhcalConfig *config;
			std::map<TGeoVolume*,Hit*> volumeToHitMap;

			Matrix3D<TGeoVolume*> hitMapVolumePtr;

		public:

			TGeoVolume *GetCalorimeterVolume()
				{ return geoManager->GetTopVolume(); }


	};  // class

}  // namespace 

#endif  //  SDHCALPROTOTYPE_HH
