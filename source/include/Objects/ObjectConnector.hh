  /// \file ObjectConnector.hh
/*
 *
 * ObjectConnector.hh header template generated by fclass
 * Creation date : mar. juil. 9 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#ifndef OBJECTCONNECTOR_HH
#define OBJECTCONNECTOR_HH

#include <iostream> 
#include <string> 
#include <cstdlib> 
#include <cmath> 
#include <vector> 

#include "Utilities/ReturnValues.hh"
#include "Utilities/Internal.hh"

namespace baboon {


	class HitCompositeObject;

	typedef std::pair<HitCompositeObject*,HitCompositeObject*> Connector;

	/*!
	 *
	 * Class ObjectConnector
	 *
	 */

	class ObjectConnector {

		public:

			/*!
			 *
			 * Default Constructor
			 *
			 */
			ObjectConnector();

			/*!
			 *
			 * Default Destructor
			 *
			 */
			virtual ~ObjectConnector();

			/*!
			 *
			 *
			 *
			 */
			Return SetFirst( HitCompositeObject *obj );

			/*!
			 *
			 *
			 *
			 */
			Return SetSecond( HitCompositeObject *obj );

			/*!
			 *
			 *
			 *
			 */
			Return Connect( HitCompositeObject *first , HitCompositeObject *second );

			/*!
			 *
			 *
			 *
			 */
			HitCompositeObject *GetFirst();

			/*!
			 *
			 *
			 *
			 */
			HitCompositeObject *GetSecond();

			/*!
			 *
			 *
			 *
			 */
			bool IsConnectionComplete();

	protected:

			Connector *connector;


	};  // class

	typedef std::vector<ObjectConnector*> ObjectConnectorCollection;

}  // namespace 

#endif  //  OBJECTCONNECTOR_HH
