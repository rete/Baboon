  /// \file ShowerManager.hh
/*
 *
 * ShowerManager.hh header template generated by fclass
 * Creation date : mar. mai 14 2013
 * Copyright (c) CNRS , IPNL
 *
 * All Right Reserved.
 * Use and copying of these libraries and preparation of derivative works
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * @author : rete
 */


#ifndef SHOWERMANAGER_HH
#define SHOWERMANAGER_HH

#include <iostream>
#include <string>
#include <cstdlib>
#include <cmath>
#include <vector>

#include "Reconstruction/Objects/Shower.hh"
#include "Utilities/ReturnValues.hh"
#include "Utilities/Globals.hh"


namespace baboon {

	/*!
	 * Class ShowerManager
	 */

	class ShowerManager {

		public:

			/*! Return a single instance of this class. Singleton pattern */
			static ShowerManager *GetInstance();
			/*! Kill the instance carefully. Singleton pattern */
			static void Kill();

			Return AddShower( Shower *shower );

			Return RemoveShower( Shower *shower );

			bool ShowerContainsHit( Shower *shower , Hit *hit );

			Return ClearAllContent();

		protected:

			/*! Unique instance of this class. Singleton pattern */
			static ShowerManager* instance;
			/*! Protected constructor. Singleton pattern */
			ShowerManager();
			/*! Protected constructor. Singleton pattern */
			virtual ~ShowerManager();

			ShowerCollection *showerCollection;

		public:

			inline ShowerCollection *GetShowerCollection()
				{ return showerCollection; }

	};  // class

}  // namespace 

#endif  //  SHOWERMANAGER_HH
